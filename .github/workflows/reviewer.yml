name: Review and Merge SQL Scripts

on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/sql_script/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  review_sql_scripts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyJWT cryptography

      - name: Generate JWT Token
        id: generate_jwt
        run: |
          python .github/utils/generate_jwt.py
        env:
          APP_ID: ${{ secrets.APP_ID }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      
      - name: Check for CREATE statements in SQL files
        id: check_sql_changes
        run: |
          # Use explicit base and head SHAs for diffing
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -E '\.github/sql_script/.*\.(sql|txt)$' || true)

          echo "Changed SQL files: $CHANGED_FILES"

          # Initialize environment variable for script evaluation
          CREATE_STATEMENT_FOUND=false

          if [ -n "$CHANGED_FILES" ]; then
            for file in $CHANGED_FILES; do
              if [ -f "$file" ]; then
                echo "Analyzing file: $file"

                # Remove single-line and multiline comments, then check for CREATE statements
                SQL_CONTENT=$(sed -E '/^\s*--/d' "$file" | sed -E ':a;N;$!ba;s/\s*\/\*.*?\*\///g')
                if echo "$SQL_CONTENT" | grep -iq "CREATE"; then
                  CREATE_STATEMENT_FOUND=true
                  echo "CREATE statement found in $file"
                  break
                fi
              fi
            done
          fi

          # Set the appropriate environment variable
          if [ "$CREATE_STATEMENT_FOUND" = true ]; then
            echo "create_script=true" >> "$GITHUB_ENV"
          else
            echo "create_script=false" >> "$GITHUB_ENV"
          fi

      - name: Approve PR or Notify Reviewer
        run: |
          if [ "$create_script" = "true" ]; then
            echo "CREATE statement found. Notify reviewer."
            gh pr edit ${{ github.event.pull_request.number }} --add-reviewer Notyou1231
          else
            echo "No CREATE statement found. Auto-approving the PR."
            gh api graphql -f query='
              mutation {
                addPullRequestReview(input: {pullRequestId: "${{ github.event.pull_request.node_id }}", event: APPROVE, body: "Auto-approved by GitHub App"}) {
                  clientMutationId
                }
              }
            ' --header "Authorization: Bearer ${{ steps.generate_jwt.outputs.token }}"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
