name: Auto Approve PR and SQL Diff

on:
  pull_request:
    branches:
      - main  # Fixed the branch declaration
    types: [opened, synchronize, reopened]
    paths:
      - '.github/sql_script/**'  # Correct path matching for your SQL scripts

jobs:
  approve_pr_and_diff:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code with full history
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch entire history for accurate SHA references

      # Step 2: Set up Python and install required dependencies
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install python-jose pyjwt cryptography jq

      # Step 3: Generate JWT token for GitHub App authentication
      - name: Generate JWT Token
        id: jwt
        run: |
          python .github/utils/generate_jwt.py
          echo "JWT_TOKEN=$(cat .github/utils/jwt_token.txt)" >> $GITHUB_ENV

      # Step 4: Fetch Installation Token using JWT
      - name: Fetch Installation Token
        run: |
          INSTALLATION_TOKEN=$(curl -X POST -H "Authorization: Bearer $JWT_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/app/installations/INSTALLATION_ID/access_tokens | jq -r '.token')
          echo "INSTALLATION_TOKEN=$INSTALLATION_TOKEN" >> $GITHUB_ENV

      # Step 5: Use explicit base and head SHAs for diffing
      - name: Use explicit base and head SHAs for diffing
        run: |
          # Check if it's a PR event
          if [ -n "$GITHUB_BASE_REF" ]; then
            BASE_SHA=$(git rev-parse --short $GITHUB_BASE_REF)
            HEAD_SHA=$(git rev-parse --short $GITHUB_SHA)
          else
            # For push events, we can use the same SHA for both base and head
            BASE_SHA=$GITHUB_SHA
            HEAD_SHA=$GITHUB_SHA
          fi
          echo "Base SHA: $BASE_SHA, Head SHA: $HEAD_SHA"
          
          # List Changed SQL Files in sql_scripts folder
          CHANGED_FILES=$(git diff --name-only $BASE_SHA $HEAD_SHA | grep -E '^\.github/sql_script/.*\.sql$')
          echo "Changed SQL files: $CHANGED_FILES"
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No SQL files changed. Skipping PR approval."
            exit 0
          fi

      # Step 6: Check for CREATE statement and auto-approve PR if absent
      - name: Auto-approve the PR
        run: |
          if grep -q "CREATE" <<< "$CHANGED_FILES"; then
            echo "CREATE statement found. Reviewer approval required."
          else
            echo "No CREATE statement found. Auto-approving the PR."
            export GH_TOKEN=$INSTALLATION_TOKEN
            PR_NUMBER=$(jq --raw-output .pull_request.number $GITHUB_EVENT_PATH)
            gh pr review --approve --body "Auto-approved by GitHub App" $PR_NUMBER
