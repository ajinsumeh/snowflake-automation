name: Review and Approve/Merge SQL Scripts

on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/sql_script/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  process_sql_scripts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Check SQL files for CREATE statements
        id: check_sql_changes
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -E '\.github/sql_script/.*\.(sql|txt)$' || true)
          echo "Changed SQL files: $CHANGED_FILES"
          echo "changed_files=$CHANGED_FILES" >> "$GITHUB_OUTPUT"

          CREATE_STATEMENT_FOUND=false
          if [ -n "$CHANGED_FILES" ]; then
            for file in $CHANGED_FILES; do
              if [ -f "$file" ]; then
                SQL_CONTENT=$(sed -E '/^\s*--/d' "$file" | sed -E ':a;N;$!ba;s/\s*\/\*.*?\*\///g')
                if echo "$SQL_CONTENT" | grep -iq "CREATE"; then
                  CREATE_STATEMENT_FOUND=true
                  echo "CREATE statement found in $file"
                  break
                fi
              fi
            done
          fi

          if [ "$CREATE_STATEMENT_FOUND" = true ]; then
            echo "create_script=true" >> "$GITHUB_ENV"
          else
            echo "create_script=false" >> "$GITHUB_ENV"
          fi

      - name: Assign reviewer for CREATE scripts
        if: env.create_script == 'true'
        run: |
          echo "✅ CREATE statement detected. Assigning reviewer: sumeshmg"
          gh pr edit ${{ github.event.pull_request.number }} --add-reviewer sumeshmg || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-approve PR if no CREATE statement
        if: env.create_script == 'false'
        run: |
          echo "ℹ️ No CREATE statement found. Auto-approving PR."
          gh pr review ${{ github.event.pull_request.number }} --approve --body "✅ Auto-approved as no CREATE statements detected."
        env:
          GH_TOKEN: ${{ secrets.PA_TOKEN }}

      - name: Notify if reviewer was assigned
        if: env.create_script == 'true'
        run: |
          gh pr comment ${{ github.event.pull_request.number }} \
            --body "⚠️ Manual review required. Reviewer `Notyou1231` has been assigned."
        env:
          GH_TOKEN: ${{ secrets.PA_TOKEN }}

      - name: Notify if auto-approved
        if: env.create_script == 'false'
        run: |
          gh pr comment ${{ github.event.pull_request.number }} \
            --body "✅ PR auto-approved as no CREATE statements were found."
        env:
          GH_TOKEN: ${{ secrets.PA_TOKEN }}

      - name: Notify via AWS SNS
        if: env.create_script == 'true'
        run: |
          MESSAGE=$(cat <<EOF
          {
            "Subject": "Manual Review Required for SQL Script Changes",
            "Message": "Pull Request #${{ github.event.pull_request.number }} requires manual review.\\n\\n\
            PR Link: ${{ github.event.pull_request.html_url }}\\n\
            Changed Files: ${{ steps.check_sql_changes.outputs.changed_files }}\\n\
            Approve: https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}/files\\n\
            Reject: https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}/files",
            "TopicArn": "${{ secrets.AWS_SNS_TOPIC_ARN }}"
          }
          EOF
          )
          echo "$MESSAGE"
          aws sns publish --cli-input-json "$MESSAGE" --region "${{ secrets.AWS_REGION }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
